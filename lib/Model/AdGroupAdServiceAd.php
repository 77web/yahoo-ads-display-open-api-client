<?php
/**
 * AdGroupAdServiceAd
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  YahooAdsDisplayApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v4/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YahooAdsDisplayApi\Client\Model;

use \ArrayAccess;
use \YahooAdsDisplayApi\Client\ObjectSerializer;

/**
 * AdGroupAdServiceAd Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt; AdGroupAdServiceAdオブジェクトは、広告を格納するコンテナです。&lt;br&gt; このフィールドは、ADD時は必須となり、SET時は省略可能となります。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; AdGroupAdServiceAd object is a container for storing ads.&lt;br&gt; This field is required in ADD operation, and will be optional in SET operation. &lt;/div&gt;
 * @package  YahooAdsDisplayApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AdGroupAdServiceAd implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AdGroupAdServiceAd';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'ad_type' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceAdType',
        'banner_image_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerImageAd',
        'banner_video_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerVideoAd',
        'dynamic_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceDynamicAd',
        'mobile_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceMobileAd',
        'pos_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServicePosAd',
        'responsive_image_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveImageAd',
        'responsive_video_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveVideoAd',
        'static_frame_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceStaticFrameAd',
        'text_ad' => '\YahooAdsDisplayApi\Client\Model\AdGroupAdServiceTextAd'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'ad_type' => null,
        'banner_image_ad' => null,
        'banner_video_ad' => null,
        'dynamic_ad' => null,
        'mobile_ad' => null,
        'pos_ad' => null,
        'responsive_image_ad' => null,
        'responsive_video_ad' => null,
        'static_frame_ad' => null,
        'text_ad' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ad_type' => 'adType',
        'banner_image_ad' => 'bannerImageAd',
        'banner_video_ad' => 'bannerVideoAd',
        'dynamic_ad' => 'dynamicAd',
        'mobile_ad' => 'mobileAd',
        'pos_ad' => 'posAd',
        'responsive_image_ad' => 'responsiveImageAd',
        'responsive_video_ad' => 'responsiveVideoAd',
        'static_frame_ad' => 'staticFrameAd',
        'text_ad' => 'textAd'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ad_type' => 'setAdType',
        'banner_image_ad' => 'setBannerImageAd',
        'banner_video_ad' => 'setBannerVideoAd',
        'dynamic_ad' => 'setDynamicAd',
        'mobile_ad' => 'setMobileAd',
        'pos_ad' => 'setPosAd',
        'responsive_image_ad' => 'setResponsiveImageAd',
        'responsive_video_ad' => 'setResponsiveVideoAd',
        'static_frame_ad' => 'setStaticFrameAd',
        'text_ad' => 'setTextAd'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ad_type' => 'getAdType',
        'banner_image_ad' => 'getBannerImageAd',
        'banner_video_ad' => 'getBannerVideoAd',
        'dynamic_ad' => 'getDynamicAd',
        'mobile_ad' => 'getMobileAd',
        'pos_ad' => 'getPosAd',
        'responsive_image_ad' => 'getResponsiveImageAd',
        'responsive_video_ad' => 'getResponsiveVideoAd',
        'static_frame_ad' => 'getStaticFrameAd',
        'text_ad' => 'getTextAd'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ad_type'] = $data['ad_type'] ?? null;
        $this->container['banner_image_ad'] = $data['banner_image_ad'] ?? null;
        $this->container['banner_video_ad'] = $data['banner_video_ad'] ?? null;
        $this->container['dynamic_ad'] = $data['dynamic_ad'] ?? null;
        $this->container['mobile_ad'] = $data['mobile_ad'] ?? null;
        $this->container['pos_ad'] = $data['pos_ad'] ?? null;
        $this->container['responsive_image_ad'] = $data['responsive_image_ad'] ?? null;
        $this->container['responsive_video_ad'] = $data['responsive_video_ad'] ?? null;
        $this->container['static_frame_ad'] = $data['static_frame_ad'] ?? null;
        $this->container['text_ad'] = $data['text_ad'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ad_type
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceAdType|null
     */
    public function getAdType()
    {
        return $this->container['ad_type'];
    }

    /**
     * Sets ad_type
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceAdType|null $ad_type ad_type
     *
     * @return self
     */
    public function setAdType($ad_type)
    {
        $this->container['ad_type'] = $ad_type;

        return $this;
    }

    /**
     * Gets banner_image_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerImageAd|null
     */
    public function getBannerImageAd()
    {
        return $this->container['banner_image_ad'];
    }

    /**
     * Sets banner_image_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerImageAd|null $banner_image_ad banner_image_ad
     *
     * @return self
     */
    public function setBannerImageAd($banner_image_ad)
    {
        $this->container['banner_image_ad'] = $banner_image_ad;

        return $this;
    }

    /**
     * Gets banner_video_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerVideoAd|null
     */
    public function getBannerVideoAd()
    {
        return $this->container['banner_video_ad'];
    }

    /**
     * Sets banner_video_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceBannerVideoAd|null $banner_video_ad banner_video_ad
     *
     * @return self
     */
    public function setBannerVideoAd($banner_video_ad)
    {
        $this->container['banner_video_ad'] = $banner_video_ad;

        return $this;
    }

    /**
     * Gets dynamic_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceDynamicAd|null
     */
    public function getDynamicAd()
    {
        return $this->container['dynamic_ad'];
    }

    /**
     * Sets dynamic_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceDynamicAd|null $dynamic_ad dynamic_ad
     *
     * @return self
     */
    public function setDynamicAd($dynamic_ad)
    {
        $this->container['dynamic_ad'] = $dynamic_ad;

        return $this;
    }

    /**
     * Gets mobile_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceMobileAd|null
     */
    public function getMobileAd()
    {
        return $this->container['mobile_ad'];
    }

    /**
     * Sets mobile_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceMobileAd|null $mobile_ad mobile_ad
     *
     * @return self
     */
    public function setMobileAd($mobile_ad)
    {
        $this->container['mobile_ad'] = $mobile_ad;

        return $this;
    }

    /**
     * Gets pos_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServicePosAd|null
     */
    public function getPosAd()
    {
        return $this->container['pos_ad'];
    }

    /**
     * Sets pos_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServicePosAd|null $pos_ad pos_ad
     *
     * @return self
     */
    public function setPosAd($pos_ad)
    {
        $this->container['pos_ad'] = $pos_ad;

        return $this;
    }

    /**
     * Gets responsive_image_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveImageAd|null
     */
    public function getResponsiveImageAd()
    {
        return $this->container['responsive_image_ad'];
    }

    /**
     * Sets responsive_image_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveImageAd|null $responsive_image_ad responsive_image_ad
     *
     * @return self
     */
    public function setResponsiveImageAd($responsive_image_ad)
    {
        $this->container['responsive_image_ad'] = $responsive_image_ad;

        return $this;
    }

    /**
     * Gets responsive_video_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveVideoAd|null
     */
    public function getResponsiveVideoAd()
    {
        return $this->container['responsive_video_ad'];
    }

    /**
     * Sets responsive_video_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceResponsiveVideoAd|null $responsive_video_ad responsive_video_ad
     *
     * @return self
     */
    public function setResponsiveVideoAd($responsive_video_ad)
    {
        $this->container['responsive_video_ad'] = $responsive_video_ad;

        return $this;
    }

    /**
     * Gets static_frame_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceStaticFrameAd|null
     */
    public function getStaticFrameAd()
    {
        return $this->container['static_frame_ad'];
    }

    /**
     * Sets static_frame_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceStaticFrameAd|null $static_frame_ad static_frame_ad
     *
     * @return self
     */
    public function setStaticFrameAd($static_frame_ad)
    {
        $this->container['static_frame_ad'] = $static_frame_ad;

        return $this;
    }

    /**
     * Gets text_ad
     *
     * @return \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceTextAd|null
     */
    public function getTextAd()
    {
        return $this->container['text_ad'];
    }

    /**
     * Sets text_ad
     *
     * @param \YahooAdsDisplayApi\Client\Model\AdGroupAdServiceTextAd|null $text_ad text_ad
     *
     * @return self
     */
    public function setTextAd($text_ad)
    {
        $this->container['text_ad'] = $text_ad;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


