<?php
/**
 * GuaranteedCampaignServiceBrandTracking
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v4/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * GuaranteedCampaignServiceBrandTracking Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt; GuaranteedCampaignServiceBrandTrackingは、ブランド効果測定レポートの設定情報を保持します。&lt;br&gt; このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; GuaranteedCampaignServiceBrandTracking holds the setting information of brand tracking report.&lt;br&gt; Although this field will be returned in the response, it will be ignored on input. &lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class GuaranteedCampaignServiceBrandTracking implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'GuaranteedCampaignServiceBrandTracking';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'audience_category_ids1' => 'string[]',
        'audience_category_ids2' => 'string[]',
        'business_category_ids' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'audience_category_ids1' => null,
        'audience_category_ids2' => null,
        'business_category_ids' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'audience_category_ids1' => 'audienceCategoryIds1',
        'audience_category_ids2' => 'audienceCategoryIds2',
        'business_category_ids' => 'businessCategoryIds'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'audience_category_ids1' => 'setAudienceCategoryIds1',
        'audience_category_ids2' => 'setAudienceCategoryIds2',
        'business_category_ids' => 'setBusinessCategoryIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'audience_category_ids1' => 'getAudienceCategoryIds1',
        'audience_category_ids2' => 'getAudienceCategoryIds2',
        'business_category_ids' => 'getBusinessCategoryIds'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['audience_category_ids1'] = $data['audience_category_ids1'] ?? null;
        $this->container['audience_category_ids2'] = $data['audience_category_ids2'] ?? null;
        $this->container['business_category_ids'] = $data['business_category_ids'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets audience_category_ids1
     *
     * @return string[]|null
     */
    public function getAudienceCategoryIds1()
    {
        return $this->container['audience_category_ids1'];
    }

    /**
     * Sets audience_category_ids1
     *
     * @param string[]|null $audience_category_ids1 <div lang=\"ja\"> オーディエンスカテゴリIDグループ1です。<br> レポート作成時、ここで指定されたカテゴリーに対して強い興味関心を持つ層を対象に集計します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Audience Category ID group 1.<br> When creating a report, aggregation will be executed for the group with a strong interest in the category specified in this field.<br>  Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return self
     */
    public function setAudienceCategoryIds1($audience_category_ids1)
    {
        $this->container['audience_category_ids1'] = $audience_category_ids1;

        return $this;
    }

    /**
     * Gets audience_category_ids2
     *
     * @return string[]|null
     */
    public function getAudienceCategoryIds2()
    {
        return $this->container['audience_category_ids2'];
    }

    /**
     * Sets audience_category_ids2
     *
     * @param string[]|null $audience_category_ids2 <div lang=\"ja\"> オーディエンスカテゴリIDグループ2です。<br> レポート作成時、ここで指定されたカテゴリーに対して少し興味関心を持つ層を対象に集計します。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Audience Category ID group 2.<br> When creating a report, aggregation will be executed for the group with a small interest in the category specified in this field.<br>  Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return self
     */
    public function setAudienceCategoryIds2($audience_category_ids2)
    {
        $this->container['audience_category_ids2'] = $audience_category_ids2;

        return $this;
    }

    /**
     * Gets business_category_ids
     *
     * @return string[]|null
     */
    public function getBusinessCategoryIds()
    {
        return $this->container['business_category_ids'];
    }

    /**
     * Sets business_category_ids
     *
     * @param string[]|null $business_category_ids <div lang=\"ja\"> ビジネスカテゴリIDグループです。<br> アンケート対象になる広告・商材の業種の種別を表します。<br> ※返却される値は、DictionaryServiceのgetBusinessCategoryで取得されるDictionaryServiceBusinessCategoryのbusinessCategoryIdフィールドをご確認ください。<br> このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 </div> <div lang=\"en\"> Business Category ID group.<br> This describes the type of ads/products which is a subject of the survey.  <br> *Refer to the businessCategoryId field of DictionaryServiceBusinessCategory which can be obtained via getBusinessCategory in DictionaryService, to check the values to be returned in this field.<br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return self
     */
    public function setBusinessCategoryIds($business_category_ids)
    {
        $this->container['business_category_ids'] = $business_category_ids;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


