<?php
/**
 * AccountAuthority
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v4/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AccountAuthority Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;AccountAuthorityオブジェクトは、アカウント権限情報を示します。&lt;br&gt; authoritiesで返却される値は、以下のとおりです。   &lt;table border&#x3D;&#39;1&#39;&gt;     &lt;tr&gt;       &lt;th&gt;accountAuthorities&lt;/th&gt;       &lt;th&gt;説明&lt;/th&gt;       &lt;th&gt;権限種別&lt;/th&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;WEBSITE_TRAFFIC&lt;/td&gt;       &lt;td&gt;運用型：サイト誘導&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;VIDEO_VIEW&lt;/td&gt;       &lt;td&gt;運用型：動画再生&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;APP_PROMOTION&lt;/td&gt;       &lt;td&gt;運用型：アプリ訴求&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;CONVERSION&lt;/td&gt;       &lt;td&gt;運用型：コンバージョン&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;ITEM_LIST&lt;/td&gt;       &lt;td&gt;運用型：商品リスト訴求&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;BRAND_AWARENESS&lt;/td&gt;       &lt;td&gt;運用型：ブランド認知&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;BRAND_AWARENESS_GUARANTEED&lt;/td&gt;       &lt;td&gt;予約型：ブランド認知&lt;/td&gt;       &lt;td&gt;キャンペーン目的&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;SHOPPING_ADS&lt;/td&gt;       &lt;td&gt;eコマース&lt;/td&gt;       &lt;td&gt;キャンペーン掲載タイプ&lt;/td&gt;     &lt;/tr&gt;   &lt;/table&gt; それぞれのキャンペーン目的の詳細については、&lt;a href&#x3D;\&quot;https://ads-help.yahoo.co.jp/yahooads/display/articledetail?lan&#x3D;ja&amp;aid&#x3D;51512\&quot;&gt;目的別キャンペーン作成について&lt;/a&gt;をご確認ください。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt;AccountAuthority objects serve account authority information.&lt;br&gt; Responded values of &#x60;authorities&#x60; are as follows.   &lt;table border&#x3D;&#39;1&#39;&gt;     &lt;tr&gt;       &lt;th&gt;accountAuthorities&lt;/th&gt;       &lt;th&gt;description&lt;/th&gt;       &lt;th&gt;authority type&lt;/th&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;WEBSITE_TRAFFIC&lt;/td&gt;       &lt;td&gt;AUCTION : Website traffic&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;VIDEO_VIEW&lt;/td&gt;       &lt;td&gt;AUCTION : Video view&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;APP_PROMOTION&lt;/td&gt;       &lt;td&gt;AUCTION : App promotion&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;CONVERSION&lt;/td&gt;       &lt;td&gt;AUCTION : Conversion&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;ITEM_LIST&lt;/td&gt;       &lt;td&gt;AUCTION : Item list promotion&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;BRAND_AWARENESS&lt;/td&gt;       &lt;td&gt;AUCTION : Brand awareness&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;BRAND_AWARENESS_GUARANTEED&lt;/td&gt;       &lt;td&gt;GUARANTEED : Brand awareness&lt;/td&gt;       &lt;td&gt;Campaign goal&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;SHOPPING_ADS&lt;/td&gt;       &lt;td&gt;Ecommerce&lt;/td&gt;       &lt;td&gt;Campaign delivery type&lt;/td&gt;     &lt;/tr&gt;   &lt;/table&gt; Details of these campaign goal are described on &lt;a href&#x3D;\&quot;https://ads-help.yahoo.co.jp/yahooads/display/articledetail?lan&#x3D;ja&amp;aid&#x3D;51512\&quot;&gt;目的別キャンペーン作成について&lt;/a&gt; (Japanese context only). &lt;/div&gt;
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AccountAuthority implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AccountAuthority';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'account_id' => 'int',
        'authorities' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'account_id' => 'int64',
        'authorities' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'accountId',
        'authorities' => 'authorities'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'authorities' => 'setAuthorities'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'authorities' => 'getAuthorities'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = $data['account_id'] ?? null;
        $this->container['authorities'] = $data['authorities'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param int|null $account_id <div lang=\"ja\">アカウントIDです。</div> <div lang=\"en\">Account ID.</div>
     *
     * @return self
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets authorities
     *
     * @return string[]|null
     */
    public function getAuthorities()
    {
        return $this->container['authorities'];
    }

    /**
     * Sets authorities
     *
     * @param string[]|null $authorities <div lang=\"ja\">アカウント権限です。</div> <div lang=\"en\">Account authority.</div>
     *
     * @return self
     */
    public function setAuthorities($authorities)
    {
        $this->container['authorities'] = $authorities;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


