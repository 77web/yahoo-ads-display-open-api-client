<?php
/**
 * AccountManagementServiceClient
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  YahooAdsDisplayApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 ディスプレイ広告 API リファレンス / Yahoo! JAPAN Ads Display Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 ディスプレイ広告 APIのWebサービスについて説明します。</div> <div lang=\"en\">Display Ads API Web Services supported in Yahoo! JAPAN Ads API.</div> <div><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/design/v4/Route.yaml\">OpenAPI Specification</a></div> <div lang=\"ja\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/ja\">Best Practice</a></div> <div lang=\"en\"><a target=\"_blank\" href=\"https://github.com/yahoojp-marketing/ads-display-api-documents/blob/master/bestpractice/en\">Best Practice</a></div>
 *
 * The version of the OpenAPI document: v4
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace YahooAdsDisplayApi\Client\Model;

use \ArrayAccess;
use \YahooAdsDisplayApi\Client\ObjectSerializer;

/**
 * AccountManagementServiceClient Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt; AccountManagementServiceClientオブジェクトは、広告主情報を表します。&lt;br&gt; このフィールドは、ADD時に必須となり、SET時に無視されます。 &lt;/div&gt; &lt;div lang&#x3D;\&quot;en\&quot;&gt; AccountManagementServiceClient object describes the client information.&lt;br&gt; This field is required in ADD operation, and will be ignored in SET operation. &lt;/div&gt;
 * @package  YahooAdsDisplayApi\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class AccountManagementServiceClient implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AccountManagementServiceClient';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'building' => 'string',
        'city' => 'string',
        'client_person_name' => 'string',
        'company_name' => 'string',
        'company_name_kana' => 'string',
        'enterprise_type' => '\YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseType',
        'enterprise_type_position' => '\YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseTypePosition',
        'phone_number' => 'string',
        'prefecture_code' => '\YahooAdsDisplayApi\Client\Model\AccountManagementServicePrefectureCode',
        'street1' => 'string',
        'street2' => 'string',
        'url' => 'string',
        'url_type' => '\YahooAdsDisplayApi\Client\Model\AccountManagementServiceUrlType',
        'zip' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'building' => null,
        'city' => null,
        'client_person_name' => null,
        'company_name' => null,
        'company_name_kana' => null,
        'enterprise_type' => null,
        'enterprise_type_position' => null,
        'phone_number' => null,
        'prefecture_code' => null,
        'street1' => null,
        'street2' => null,
        'url' => null,
        'url_type' => null,
        'zip' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'building' => 'building',
        'city' => 'city',
        'client_person_name' => 'clientPersonName',
        'company_name' => 'companyName',
        'company_name_kana' => 'companyNameKana',
        'enterprise_type' => 'enterpriseType',
        'enterprise_type_position' => 'enterpriseTypePosition',
        'phone_number' => 'phoneNumber',
        'prefecture_code' => 'prefectureCode',
        'street1' => 'street1',
        'street2' => 'street2',
        'url' => 'url',
        'url_type' => 'urlType',
        'zip' => 'zip'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'building' => 'setBuilding',
        'city' => 'setCity',
        'client_person_name' => 'setClientPersonName',
        'company_name' => 'setCompanyName',
        'company_name_kana' => 'setCompanyNameKana',
        'enterprise_type' => 'setEnterpriseType',
        'enterprise_type_position' => 'setEnterpriseTypePosition',
        'phone_number' => 'setPhoneNumber',
        'prefecture_code' => 'setPrefectureCode',
        'street1' => 'setStreet1',
        'street2' => 'setStreet2',
        'url' => 'setUrl',
        'url_type' => 'setUrlType',
        'zip' => 'setZip'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'building' => 'getBuilding',
        'city' => 'getCity',
        'client_person_name' => 'getClientPersonName',
        'company_name' => 'getCompanyName',
        'company_name_kana' => 'getCompanyNameKana',
        'enterprise_type' => 'getEnterpriseType',
        'enterprise_type_position' => 'getEnterpriseTypePosition',
        'phone_number' => 'getPhoneNumber',
        'prefecture_code' => 'getPrefectureCode',
        'street1' => 'getStreet1',
        'street2' => 'getStreet2',
        'url' => 'getUrl',
        'url_type' => 'getUrlType',
        'zip' => 'getZip'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['building'] = $data['building'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['client_person_name'] = $data['client_person_name'] ?? null;
        $this->container['company_name'] = $data['company_name'] ?? null;
        $this->container['company_name_kana'] = $data['company_name_kana'] ?? null;
        $this->container['enterprise_type'] = $data['enterprise_type'] ?? null;
        $this->container['enterprise_type_position'] = $data['enterprise_type_position'] ?? null;
        $this->container['phone_number'] = $data['phone_number'] ?? null;
        $this->container['prefecture_code'] = $data['prefecture_code'] ?? null;
        $this->container['street1'] = $data['street1'] ?? null;
        $this->container['street2'] = $data['street2'] ?? null;
        $this->container['url'] = $data['url'] ?? null;
        $this->container['url_type'] = $data['url_type'] ?? null;
        $this->container['zip'] = $data['zip'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['phone_number']) && !preg_match("/^\\d{1,5}-\\d{1,5}-\\d{1,5}$/", $this->container['phone_number'])) {
            $invalidProperties[] = "invalid value for 'phone_number', must be conform to the pattern /^\\d{1,5}-\\d{1,5}-\\d{1,5}$/.";
        }

        if (!is_null($this->container['zip']) && !preg_match("/^\\d{3}-\\d{4}$/", $this->container['zip'])) {
            $invalidProperties[] = "invalid value for 'zip', must be conform to the pattern /^\\d{3}-\\d{4}$/.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets building
     *
     * @return string|null
     */
    public function getBuilding()
    {
        return $this->container['building'];
    }

    /**
     * Sets building
     *
     * @param string|null $building <div lang=\"ja\"> ビル名です。<br> このフィールドは、ADD時に省略可能となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Building name.<br> This field is optional in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setBuilding($building)
    {
        $this->container['building'] = $building;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city <div lang=\"ja\"> 市区町村名です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> City name.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets client_person_name
     *
     * @return string|null
     */
    public function getClientPersonName()
    {
        return $this->container['client_person_name'];
    }

    /**
     * Sets client_person_name
     *
     * @param string|null $client_person_name <div lang=\"ja\"> 広告主の担当者氏名です。<br> このフィールドは、ADD時に省略可能となり、SET時に無視されます。 </div> <div lang=\"en\"> Client person name.<br> This field is optional in ADD operation, and will be ignored in SET operation. </div>
     *
     * @return self
     */
    public function setClientPersonName($client_person_name)
    {
        $this->container['client_person_name'] = $client_person_name;

        return $this;
    }

    /**
     * Gets company_name
     *
     * @return string|null
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     *
     * @param string|null $company_name <div lang=\"ja\"> 広告主名です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Company name.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations.</div>
     *
     * @return self
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets company_name_kana
     *
     * @return string|null
     */
    public function getCompanyNameKana()
    {
        return $this->container['company_name_kana'];
    }

    /**
     * Sets company_name_kana
     *
     * @param string|null $company_name_kana <div lang=\"ja\"> 広告主名カナです。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Kana characters of company name.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setCompanyNameKana($company_name_kana)
    {
        $this->container['company_name_kana'] = $company_name_kana;

        return $this;
    }

    /**
     * Gets enterprise_type
     *
     * @return \YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseType|null
     */
    public function getEnterpriseType()
    {
        return $this->container['enterprise_type'];
    }

    /**
     * Sets enterprise_type
     *
     * @param \YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseType|null $enterprise_type enterprise_type
     *
     * @return self
     */
    public function setEnterpriseType($enterprise_type)
    {
        $this->container['enterprise_type'] = $enterprise_type;

        return $this;
    }

    /**
     * Gets enterprise_type_position
     *
     * @return \YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseTypePosition|null
     */
    public function getEnterpriseTypePosition()
    {
        return $this->container['enterprise_type_position'];
    }

    /**
     * Sets enterprise_type_position
     *
     * @param \YahooAdsDisplayApi\Client\Model\AccountManagementServiceEnterpriseTypePosition|null $enterprise_type_position enterprise_type_position
     *
     * @return self
     */
    public function setEnterpriseTypePosition($enterprise_type_position)
    {
        $this->container['enterprise_type_position'] = $enterprise_type_position;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string|null $phone_number <div lang=\"ja\"> 電話番号です。<br> ※xxxxx-xxxxx-xxxxx形式です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Phone number.<br> * In xxxxx-xxxxx-xxxxx format.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setPhoneNumber($phone_number)
    {

        if (!is_null($phone_number) && (!preg_match("/^\\d{1,5}-\\d{1,5}-\\d{1,5}$/", $phone_number))) {
            throw new \InvalidArgumentException("invalid value for $phone_number when calling AccountManagementServiceClient., must conform to the pattern /^\\d{1,5}-\\d{1,5}-\\d{1,5}$/.");
        }

        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets prefecture_code
     *
     * @return \YahooAdsDisplayApi\Client\Model\AccountManagementServicePrefectureCode|null
     */
    public function getPrefectureCode()
    {
        return $this->container['prefecture_code'];
    }

    /**
     * Sets prefecture_code
     *
     * @param \YahooAdsDisplayApi\Client\Model\AccountManagementServicePrefectureCode|null $prefecture_code prefecture_code
     *
     * @return self
     */
    public function setPrefectureCode($prefecture_code)
    {
        $this->container['prefecture_code'] = $prefecture_code;

        return $this;
    }

    /**
     * Gets street1
     *
     * @return string|null
     */
    public function getStreet1()
    {
        return $this->container['street1'];
    }

    /**
     * Sets street1
     *
     * @param string|null $street1 <div lang=\"ja\"> 町・字名です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Street1.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setStreet1($street1)
    {
        $this->container['street1'] = $street1;

        return $this;
    }

    /**
     * Gets street2
     *
     * @return string|null
     */
    public function getStreet2()
    {
        return $this->container['street2'];
    }

    /**
     * Sets street2
     *
     * @param string|null $street2 <div lang=\"ja\"> 丁目・番地・号です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Street2.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setStreet2($street2)
    {
        $this->container['street2'] = $street2;

        return $this;
    }

    /**
     * Gets url
     *
     * @return string|null
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string|null $url <div lang=\"ja\"> 広告掲載を希望するサイトのURLです。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。 </div> <div lang=\"en\"> Site URL for placing advertisement.<br> This field is required in ADD operation, and will be ignored in SET operation. </div>
     *
     * @return self
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets url_type
     *
     * @return \YahooAdsDisplayApi\Client\Model\AccountManagementServiceUrlType|null
     */
    public function getUrlType()
    {
        return $this->container['url_type'];
    }

    /**
     * Sets url_type
     *
     * @param \YahooAdsDisplayApi\Client\Model\AccountManagementServiceUrlType|null $url_type url_type
     *
     * @return self
     */
    public function setUrlType($url_type)
    {
        $this->container['url_type'] = $url_type;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string|null $zip <div lang=\"ja\"> 郵便番号です。<br> ※xxx-xxxx形式です。<br> このフィールドは、ADD時に必須となり、SET時に無視されます。<br> ※clientTypeがSELFの場合は、ADD時、SET時ともに無視されます。 </div> <div lang=\"en\"> Zip code.<br> * In xxx-xxxx format.<br> This field is required in ADD operation, and will be ignored in SET operation.<br> * When clientType is \"SELF\", this field will be ignored in ADD and SET operations. </div>
     *
     * @return self
     */
    public function setZip($zip)
    {

        if (!is_null($zip) && (!preg_match("/^\\d{3}-\\d{4}$/", $zip))) {
            throw new \InvalidArgumentException("invalid value for $zip when calling AccountManagementServiceClient., must conform to the pattern /^\\d{3}-\\d{4}$/.");
        }

        $this->container['zip'] = $zip;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


